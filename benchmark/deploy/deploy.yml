---
- name: axon benchmark
  hosts: benchmark
  vars_files:
    - config.yml
  tasks:
    - name: down 
      shell: "cd {{ benchmark_monitor_dir }} && docker-compose down"
      ignore_errors: yes
      become: yes
      become_method: sudo
      tags: 
        - down

    - name: check monitor dir
      stat:
        path: "{{ benchmark_monitor_dir }}"
      register: file_status
      tags: 
        - monitor-config

    - name: create monitor dir
      file:
        path: "{{ benchmark_monitor_dir }}"
        state: directory
      when:
        file_status.stat.exists == False
      tags: 
        - monitor-config

    - name: copy docker-compose.yml
      copy:
        src: ../benchmark-monitor/docker-compose.yml
        dest: "{{ benchmark_monitor_dir }}/docker-compose.yml"
        mode: 0755
      tags: 
        - monitor-config

    - name: copy config
      copy:
        src: ../benchmark-monitor/config
        dest: "{{ benchmark_monitor_dir }}"
        mode: 0755
      tags: 
        - monitor-config

    - name: chown filebeat
      shell: sudo chown root "{{ benchmark_monitor_dir }}/config/filebeat/filebeat.yml"
      tags: 
        - monitor-config

    - name: Replace es_address
      replace:
        path: "{{ benchmark_monitor_dir }}/config/filebeat/filebeat.yml"
        regexp: "ES_ADDRESS"
        replace: "{{ es_address }}"
      tags:
          - monitor-config

    - name: Replace log_dir
      replace:
        path: "{{ benchmark_monitor_dir }}/docker-compose.yml"
        regexp: "BENCHMARK_DIR"
        replace: "{{ benchmark_dir }}"
      tags:
          - monitor-config
          

    - name: start benchmark log monitor
      shell: "cd {{ benchmark_monitor_dir }} && docker-compose up -d"
      become: yes
      become_method: sudo
      tags: 
        - start-benchmark-monitor

    - name: stop benchmark
      shell: cd  {{ benchmark_dir }} && docker-compose down
      become: yes
      ignore_errors: yes
      tags: 
        - stop-benchmark

    - name: check benchamrk dir
      stat:
        path: "{{ benchmark_dir }}"
      register: file_status
      tags:
        - config

    - name: create benchamrk dir
      file:
        path: "{{ benchmark_dir }}"
        state: directory
      when:
        file_status.stat.exists == False
      tags:
        - config

    - name: Copy the docker-compose file
      copy:
        src: docker-compose.yml
        dest: "{{ benchmark_dir }}"
        mode: 0755
      tags: 
        - config

      copy:
        src: docker-compose.yml
        dest: "{{ benchmark_dir }}"
        mode: 0755
      tags:
        - config

    - name: Copy the config.yml file
      copy:
        src: ./templates/
        dest: "{{ benchmark_dir }}"
        mode: 0755
      tags: 
        - config

    - name: Copy node_batchsize_threadnum.yml
      copy:
        src: node_batchsize_threadnum.yml
        dest: "{{ benchmark_dir }}/node_batchsize_threadnum.yml"
        mode: 0755
      tags: 
        - config

    - name: Register hostname
      shell: hostname
      register: hostname
      tags: 
        - deploy
        - config

    - name: Register batch_size
      shell: "cat {{ benchmark_dir }}/node_batchsize_threadnum.yml | grep '{{ hostname.stdout }}' | awk '{print $2}' | awk -F '/' '{print $1}'  "
      register: batch_size
      tags: 
        - config

    - name: Register thread_num
      shell: "cat {{ benchmark_dir }}/node_batchsize_threadnum.yml | grep '{{ hostname.stdout }}' | awk '{print $2}' | awk -F '/' '{print $2}'  "
      register: thread_num
      tags: 
        - config
    - name: Register mnemonic_index
      shell: "cat {{ benchmark_dir }}/node_batchsize_threadnum.yml | grep '{{ hostname.stdout }}' | awk '{print $2}' | awk -F '/' '{print $3}'  "
      register: mnemonic_index
      tags:
        - config

    - name: Replace batch_size
      shell:  sed -i "s/#batch_size/{{ batch_size.stdout }}/g" "{{ benchmark_dir }}/config.json"
      tags: 
        - config

    - name: Replace thread_num
      shell:  sed -i "s/#thread_num/{{ thread_num.stdout }}/g" "{{ benchmark_dir }}/config.json"
      tags: 
        - config
    - name: Replace mnemonic_index
      shell:  sed -i "s/#mnemonic_index/{{ mnemonic_index.stdout }}/g" "{{ benchmark_dir }}/config.json"
      tags:
        - config

    - name: Register internal_ip
      shell: "ifconfig ens5|grep inet| awk '{print $2}' |head -1"
      register: internal_ip
      tags: 
        - config

    - name: Replace internal_ip
      shell: sed -i "s/#internal_ip/{{ internal_ip.stdout }}/g" "{{ benchmark_dir }}/config.json"
      tags: 
        - config

    - name: Replace token
      shell: sed -i "s/#token/{{ token }}/g" "{{ benchmark_dir }}/config.json"
      tags: 
        - config

    - name: start benchmark
      shell: cd  {{ benchmark_dir }} && docker-compose pull && docker-compose up -d
      become: yes
      tags: 
        - start-benchmark

    - name: restart filebeat 
      shell: "cd {{ benchmark_monitor_dir }} && docker-compose restart"
      ignore_errors: yes
      become: yes
      become_method: sudo
      tags: 
        - restart-filebeat

    - name: clean monitor data
      shell: rm -rf  {{ benchmark_monitor_dir }}/data
      become: yes
      become_method: sudo
      tags: 
        - clean

    - name: clean benchmark logs
      shell: rm -rf  {{ benchmark_dir }}/logs && rm -rf {{ benchmark_dir }}/state.json
      become: yes
      become_method: sudo
      tags: 
        - clean 
